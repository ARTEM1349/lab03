                                                                                                    Стась Артем Миколайович група Кн922-б
                                                                      Номер роботи 1 ,тема роботи “Освоєння командної строки Linux”
Пункт 1  Для того щоб завантажити додаток  Virtualbox  потрібно відкрити google і встановлюємо  додаток.
Пункт 2  встановлення Linux системи для подальшої роботи для цього треба відкрити Virtualbox  натиснути кнопку створити і погодитися з усіма настройками . Потім завантажити сам файл iso Linux та встановити ого в віртуальному диску на Virtualbox. Після цього відкрити Virtualbox та в програмі яка відкрилась  розпакувати файл iso Linux.  Після першого запуску рекомендується оновити компоненти системи до актуальних (відкривши термінал): та прописав команди sudo :apt-get update; sudo apt-get upgrade;  sudo reboot , щоб ввести команди в консоль для оновлення системи.
Пункт3 відкрити консоль і прописати команди : sudo apt update, sudo apt install git, sudo apt install clang, sudo apt install  clang-tidy, sudo apt install tree, sudo apt install make , щоб ввести команди в консоль для цієї роботи.
Пункт 4 За допомогою  команди git clone виконати клонування проекту https://github.com/davydov-vyacheslav/sample_project. Для того, щоб завантажити всі необхідні матеріали.
Пункт 5 Вводимо команду tree  для того, щоб вивести на екран  необхідну структуру каталогів проекту. В результаті отримав структуру каталогу проекту. Sample_project- Sample_test_libcheck-lab00.
Пункт 6 Для того, щоб скористуватися каталогам  dist та виконати отримані бінарні файли. В командній строці зайшли до клонованого каталогу де знаходиться файл Makefile. Перевірили за допомогою команди ls дійсність його наявності. Ввели в команднії строці команду: make clean prep compile check, для компіляції проекту. Потім за допомогою утиліти tree знайшли створений файл. Після чого перейшли до каталогу dist, відкрили командний рядок у ньому і запустили файл main.bin за допомогою команди ./main.bin
Пункт 7 після команди ./main.bin  отримали таблицю з тваринами . Для зміни виводу даних зайшли в папку  src та там в файлі lib.h замінили кота на сову для виконаня завдання , піся чого вийшли з папки та прописали команду make clean prep compile check для оновлення даних. Після цього прописуємо команду./main.bin та ми бачимо заміну даних . 
Пункт8 Бачимо заміну кота на сову.
Інформація про тварину №01: Корова: зріст = 118 см, маса = 73 гр.
Інформація про тварину №02: Свиня: зріст = 7 см, маса = 60 гр.
Інформація про тварину №03: Корова: зріст = 41 см, маса = 108 гр.
Інформація про тварину №04: Свиня: зріст = 121 см, маса = 111 гр.
Інформація про тварину №05: Корова: зріст = 89 см, маса = 103 гр.
Інформація про тварину №06: Собака: зріст = 23 см, маса = 32 гр.
Інформація про тварину №07: Сова: зріст = 77 см, маса = 27 гр.
Інформація про тварину №08: Сова: зріст = 47 см, маса = 124 гр.
Інформація про тварину №09: Корова: зріст = 9 см, маса = 58 гр.
Інформація про тварину №10: Свиня: зріст = 31 см, маса = 92 гр.
Пункт9 Знаходимо папку lab00 в папці знаходимо файл Makefile та дописуємо команду all:clean prep compile run chreck. Після чого в строку прописуємо команду make all та бачимо чо за допомогою цієї команди в строку вивели всі змінені дані про тварин.
Пункт10 Для визначення поточної версії clang та make порисуємо команду apt-cache show make та apt-cache show clang. В результаті отримали наступний резульатат, що свідчить про те, що версія clang=10.0-55 а версія make=4.3.-4. Replaces: make-guile
Filename: pool/main/m/make-dfsg/make_4.3-4.1build1_amd64.deb
Size: 179745
Build-Essential: yes
Package: clang
Architecture: amd64
Version: 1:14.0-55~exp2
Priority: optional
Section: universe/devel

Пункт11 Дослідити роботу утиліти man та описати її призначення  Як треба зробити? Відкривши термінал, потрібно ввести наступні команду: man man Що отримали в результаті? Отримали опис утиліти man. Утиліта man це інтерфейс, використовуваний перегляду довідкових посібників системи, звідси й назва: man - скорочення від manual. Наприклад, можна виконати пошук команди для виконання завдання навіть якщо невідомо, як вона називається.
Пункт12 Що треба зробити? За допомогою команди git diff показати виконані зміни у файлах.Як треба зробити?Перейти до каталогу, де знаходяться змінені файли. Відкривши термінал, потрібно ввести наступні команду: git diff  Що отримали в результаті? Отримали вихідні частини коду у файлі Lib.h і як ми їх змінили це зміна кота на сову.
diff —git a/lab00/src/lib.c b/lab00/src/lib.c
index f7f86e0..541d95a 100644
--- a/lab00/src/lib.c
+++ b lab00/src/lib.c
@@ -14,16 +14,16 @@ const char *get_animal_type_name(enum animal_type type)
const char *result;
switch (type) {
case CAT :
- result = “Кіт”;
+ result = “Сова”;
break;

Це базовий комплекс програм, що виконує керування апаратною складовою комп'ютера або віртуальної машини; забезпечує керування обчислювальним процесом і організовує взаємодію з користувачем.
Android. Windows. iOS. MacOs. LinUx.
Існує 6 типів віртуалізації, які варіюються в залежності від використовуваного обладнання та додатків: Віртуалізація операційних систем Віртуалізація програмного забезпечення Віртуалізація інфраструктури Віртуалізація віддалених робочих столів Віртуалізація систем зберігання даних Віртуалізація мережі
A менеджер пакетів або система управління пакетами являє собою набір програмних засобів, що автоматизує процес встановлення, оновлення, налаштування та видалення комп'ютерних програм для комп'ютер's операційна система послідовно.

 Assembly — частково відкомпільована бібліотека коду для використання в Common Language Infrastructure (CLI)
Cabal — бібліотека і менеджер пакунків для Haskell.
Composer — менеджер залежностей для PHP.
conda - менеджер пакунків дистрибутиву Python Anaconda.
 Це програмний інструмент для керування версіями одиниці інформації: початкового коду програми, скрипту, вебсторінки, вебсайту, 3D-моделі, текстового документу тощо.
Існують два основні типи систем керування версіями: з централізованим сховищем та розподіленим
makefile - це файл, що містить набір інструкцій, що використовуються утилітою make в інструментарії автоматизації складання
Найчастіше makefile містить вказівки для утиліти make про те, як компілювати та компонувати програму
Топологічне сортування використовується для визначення точки, в якій слід зробити "make"
Команда TREE представляє графічно дерево каталогів заданого шляху чи диска.
Якщо команда git status занадто зверхня для вас — ви хочете знати, що саме ви змінили, а не просто які файли ви змінили — ви можете використати команду git diff.
